// <auto-generated />
using System;
using JobSeeker.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobSeeker.API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220303101500_AddObjs")]
    partial class AddObjs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("JobSeeker.Infrastrucure.Models.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CompanyUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("Date");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobSeekerUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerUserId");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("JobSeeker.Infrastrucure.Models.JobSeekerUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AppUserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ExpectedSalaryAnnual")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("TotalExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserEmail")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("JobSeekerUsers");
                });

            modelBuilder.Entity("JobSeeker.Infrastrucure.Models.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfCompletion")
                        .HasColumnType("Date");

                    b.Property<string>("GradeOrScore")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("JobSeekerUserId")
                        .HasColumnType("int");

                    b.Property<string>("QualificationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("University")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerUserId");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("JobSeeker.Infrastrucure.Models.VacancyRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobSeekerUserId")
                        .HasColumnType("int");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerUserId");

                    b.ToTable("VacancyRequests");
                });

            modelBuilder.Entity("JobSeeker.Infrastrucure.Models.Experience", b =>
                {
                    b.HasOne("JobSeeker.Infrastrucure.Models.JobSeekerUser", "JobSeekerUser")
                        .WithMany("Experiences")
                        .HasForeignKey("JobSeekerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobSeekerUser");
                });

            modelBuilder.Entity("JobSeeker.Infrastrucure.Models.Qualification", b =>
                {
                    b.HasOne("JobSeeker.Infrastrucure.Models.JobSeekerUser", "JobSeekerUser")
                        .WithMany("Qualifications")
                        .HasForeignKey("JobSeekerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobSeekerUser");
                });

            modelBuilder.Entity("JobSeeker.Infrastrucure.Models.VacancyRequest", b =>
                {
                    b.HasOne("JobSeeker.Infrastrucure.Models.JobSeekerUser", "JobSeekerUser")
                        .WithMany("VacancyRequests")
                        .HasForeignKey("JobSeekerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobSeekerUser");
                });

            modelBuilder.Entity("JobSeeker.Infrastrucure.Models.JobSeekerUser", b =>
                {
                    b.Navigation("Experiences");

                    b.Navigation("Qualifications");

                    b.Navigation("VacancyRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
